
import Controlador.Consultas;
import Controlador.Producto;
import Controlador.SimulacionMes;
import Controlador.VentaTabla;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author mabet
 */
public class Ventana extends javax.swing.JFrame {

    Consultas consultas = new Consultas();
    ArrayList<Producto> listadoProductos = consultas.listadoProductos();
    DefaultTableModel modeloTablaPrevia;
    DefaultTableModel modeloTablaSimulacion;
    
    String mostrarA[] = new String[12];
    String mostrarB[] = new String[12];
    String mostrarC[] = new String[12];
    String mostrarD[] = new String[12];
    
    String mostrarASimular[] = new String[12];
    String mostrarBSimular[] = new String[12];
    String mostrarCSimular[] = new String[12];
    String mostrarDSimular[] = new String[12];

    SimulacionMes mesEnero;
    SimulacionMes mesFebrero;
    SimulacionMes mesMarzo;
    SimulacionMes mesAbril;
    SimulacionMes mesMayo;
    SimulacionMes mesJunio;
    SimulacionMes mesJulio;
    SimulacionMes mesAgosto;
    SimulacionMes mesSeptiembre;
    SimulacionMes mesOctubre;
    SimulacionMes mesNoviembre;
    SimulacionMes mesDiciembre;
    
     int contador = 0;

    private void cargarCombo() {

        for (int i = 0; i < listadoProductos.size(); i++) {

            comboProductos.addItem(listadoProductos.get(i).getNombre());
        }

    }

    private void formatoTablas() {
        String cabeceraTabla[] = {"Enero", "Febrero", "Marzo",
            "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre",
            "Octubre", "Noviembre", "Diciembre"};

        String datos[][] = {};
        modeloTablaPrevia = new DefaultTableModel(datos, cabeceraTabla);
        modeloTablaSimulacion = new DefaultTableModel(datos, 0);
        tablaPrevia.setModel(modeloTablaPrevia);
        tablaSimulacion.setModel(modeloTablaSimulacion);
    }

    public Ventana() {
        initComponents();
        formatoTablas();
        cargarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPrevia = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaSimulacion = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        campoCantidad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        comboProductos = new javax.swing.JComboBox<>();
        comboMeses = new javax.swing.JComboBox<>();
        botonCrear = new javax.swing.JButton();
        botonCargarTabla = new javax.swing.JButton();
        botonLimpiar = new javax.swing.JButton();
        botonSimular = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        sliderCompetencia = new javax.swing.JSlider();
        jLabel10 = new javax.swing.JLabel();
        labelValorCompetencia = new javax.swing.JLabel();
        labelValorClima = new javax.swing.JLabel();
        sliderClima = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        sliderPublicidad = new javax.swing.JSlider();
        labelValorPublicidad = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        botonAgregarValoresMes = new javax.swing.JButton();
        comboMesesSimulacion = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        labelContador = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        botonMRPSimulado = new javax.swing.JButton();
        botonMRPHistorico = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 0));

        tablaPrevia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaPrevia);

        tablaSimulacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaSimulacion);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Simulacion Productos");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Ingresar Venta");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Nombre Producto:");

        jLabel4.setText("Cantidad Vendida:");

        campoCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoCantidadKeyTyped(evt);
            }
        });

        jLabel5.setText("Mes:");

        comboMeses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        botonCrear.setText("Crear");
        botonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCrearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoCantidad))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboMeses, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonCrear)
                        .addGap(0, 9, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboProductos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(campoCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonCrear))
                .addContainerGap())
        );

        botonCargarTabla.setText("Cargar Tabla");
        botonCargarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarTablaActionPerformed(evt);
            }
        });

        botonLimpiar.setText("Limpiar");
        botonLimpiar.setEnabled(false);
        botonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarActionPerformed(evt);
            }
        });

        botonSimular.setText("Simular");
        botonSimular.setEnabled(false);
        botonSimular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSimularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(botonCargarTabla)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonLimpiar))
                            .addComponent(botonSimular))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(botonSimular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonCargarTabla)
                            .addComponent(botonLimpiar))
                        .addGap(19, 19, 19))))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sliderCompetencia.setMajorTickSpacing(50);
        sliderCompetencia.setPaintLabels(true);
        sliderCompetencia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderCompetenciaStateChanged(evt);
            }
        });

        jLabel10.setText("Competencia:");

        labelValorCompetencia.setText("50");

        labelValorClima.setText("50");

        sliderClima.setMajorTickSpacing(50);
        sliderClima.setPaintLabels(true);
        sliderClima.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderClimaStateChanged(evt);
            }
        });

        jLabel9.setText("Clima:");

        jLabel8.setText("Campañas:");

        sliderPublicidad.setMajorTickSpacing(50);
        sliderPublicidad.setPaintLabels(true);
        sliderPublicidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderPublicidadStateChanged(evt);
            }
        });

        labelValorPublicidad.setText("50");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 0, 0));
        jLabel6.setText("Agentes Externos y Campañas");

        botonAgregarValoresMes.setText("Agregar Valores a Mes");
        botonAgregarValoresMes.setEnabled(false);
        botonAgregarValoresMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarValoresMesActionPerformed(evt);
            }
        });

        comboMesesSimulacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        comboMesesSimulacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMesesSimulacionActionPerformed(evt);
            }
        });

        jLabel7.setText("Mes:");

        jLabel12.setText("Meses Agregados:");

        labelContador.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelContador.setText("0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel8))
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(sliderCompetencia, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelValorCompetencia))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(sliderPublicidad, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelValorPublicidad))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(sliderClima, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelValorClima)))
                        .addGap(68, 68, 68)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonAgregarValoresMes)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(labelContador))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(comboMesesSimulacion, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel6))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel6)
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(sliderPublicidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(35, 35, 35))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(labelValorPublicidad)
                                .addGap(40, 40, 40)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sliderClima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel9)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(sliderCompetencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel10))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(labelContador))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(comboMesesSimulacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelValorClima))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonAgregarValoresMes, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelValorCompetencia))))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setText("Fábrica de Papas de Paquete");

        botonMRPSimulado.setText("Visualizar MRP Simulado");
        botonMRPSimulado.setEnabled(false);
        botonMRPSimulado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMRPSimuladoActionPerformed(evt);
            }
        });

        botonMRPHistorico.setText("Visualizar MRP Historico");
        botonMRPHistorico.setEnabled(false);
        botonMRPHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMRPHistoricoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 899, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonMRPSimulado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonMRPHistorico, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(botonMRPHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botonMRPSimulado, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCrearActionPerformed

        int cantidad = Integer.parseInt(campoCantidad.getText());
        String nombreProducto = comboProductos.getSelectedItem().toString();
        String mes = comboMeses.getSelectedItem().toString();

        if (consultas.registrarVenta(cantidad, nombreProducto, mes)) {
            JOptionPane.showMessageDialog(null, "Registro Correcto");
        }


    }//GEN-LAST:event_botonCrearActionPerformed

    private void campoCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoCantidadKeyTyped
        char c = evt.getKeyChar();

        if ((c < '0' || c > '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_campoCantidadKeyTyped

    private void botonCargarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarTablaActionPerformed

        ArrayList<VentaTabla> listadoVentas = consultas.listadoVentas();
        //String mostrarA[] = new String[12];
        //String mostrarB[] = new String[12];
        //String mostrarC[] = new String[12];
        //String mostrarD[] = new String[12];
        for (int i = 0; i < listadoVentas.size(); i++) {
            VentaTabla vt = listadoVentas.get(i);
            if (vt.getNombreProducto().equals("A")) {

                if (listadoVentas.get(i).getMes().equals("Enero")) {
                    mostrarA[0] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Febrero")) {
                    mostrarA[1] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Marzo")) {
                    mostrarA[2] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Abril")) {
                    mostrarA[3] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Mayo")) {
                    mostrarA[4] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Junio")) {
                    mostrarA[5] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Julio")) {
                    mostrarA[6] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Agosto")) {
                    mostrarA[7] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Septiembre")) {
                    mostrarA[8] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Octubre")) {
                    mostrarA[9] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Noviembre")) {
                    mostrarA[10] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Diciembre")) {
                    mostrarA[11] = String.valueOf(vt.getCantidad());
                }

            }

            if (vt.getNombreProducto().equals("B")) {

                if (listadoVentas.get(i).getMes().equals("Enero")) {
                    mostrarB[0] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Febrero")) {
                    mostrarB[1] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Marzo")) {
                    mostrarB[2] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Abril")) {
                    mostrarB[3] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Mayo")) {
                    mostrarB[4] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Junio")) {
                    mostrarB[5] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Julio")) {
                    mostrarB[6] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Agosto")) {
                    mostrarB[7] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Septiembre")) {
                    mostrarB[8] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Octubre")) {
                    mostrarB[9] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Noviembre")) {
                    mostrarB[10] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Diciembre")) {
                    mostrarB[11] = String.valueOf(vt.getCantidad());
                }

            }

            if (vt.getNombreProducto().equals("C")) {

                if (listadoVentas.get(i).getMes().equals("Enero")) {
                    mostrarC[0] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Febrero")) {
                    mostrarC[1] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Marzo")) {
                    mostrarC[2] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Abril")) {
                    mostrarC[3] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Mayo")) {
                    mostrarC[4] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Junio")) {
                    mostrarC[5] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Julio")) {
                    mostrarC[6] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Agosto")) {
                    mostrarC[7] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Septiembre")) {
                    mostrarC[8] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Octubre")) {
                    mostrarC[9] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Noviembre")) {
                    mostrarC[10] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Diciembre")) {
                    mostrarC[11] = String.valueOf(vt.getCantidad());
                }

            }

            if (vt.getNombreProducto().equals("D")) {

                if (listadoVentas.get(i).getMes().equals("Enero")) {
                    mostrarD[0] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Febrero")) {
                    mostrarD[1] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Marzo")) {
                    mostrarD[2] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Abril")) {
                    mostrarD[3] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Mayo")) {
                    mostrarD[4] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Junio")) {
                    mostrarD[5] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Julio")) {
                    mostrarD[6] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Agosto")) {
                    mostrarD[7] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Septiembre")) {
                    mostrarD[8] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Octubre")) {
                    mostrarD[9] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Noviembre")) {
                    mostrarD[10] = String.valueOf(vt.getCantidad());
                }

                if (listadoVentas.get(i).getMes().equals("Diciembre")) {
                    mostrarD[11] = String.valueOf(vt.getCantidad());
                }

            }
        }
        modeloTablaPrevia.addRow(mostrarA);
        modeloTablaPrevia.addRow(mostrarB);
        modeloTablaPrevia.addRow(mostrarC);
        modeloTablaPrevia.addRow(mostrarD);
        int sumaMostrarA=0;
        int sumaMostrarB=0;
        int sumaMostrarC=0;
        int sumaMostrarD=0;
        Vector<String> total = new Vector<>();
        for (int i = 0; i < 12; i++) {
            sumaMostrarA = Integer.parseInt(mostrarA[i])+sumaMostrarA;
            sumaMostrarB = Integer.parseInt(mostrarB[i])+sumaMostrarB;
            sumaMostrarC = Integer.parseInt(mostrarC[i])+sumaMostrarC;
            sumaMostrarD = Integer.parseInt(mostrarD[i])+sumaMostrarD;
            
        }
        
        total.add(String.valueOf(sumaMostrarA));
        total.add(String.valueOf(sumaMostrarB));
        total.add(String.valueOf(sumaMostrarC));
        total.add(String.valueOf(sumaMostrarD));
        
        modeloTablaPrevia.addColumn("TOTAL",total);
        

        System.out.println(listadoVentas.size());
        botonCargarTabla.setEnabled(false);
        botonLimpiar.setEnabled(true);
        botonAgregarValoresMes.setEnabled(true);
        botonMRPHistorico.setEnabled(true);

    }//GEN-LAST:event_botonCargarTablaActionPerformed

    private void botonSimularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSimularActionPerformed

        botonSimular.setEnabled(false);
        Vector<Float> cantidadEnero = new Vector<>();
        Vector<Float> cantidadFebrero = new Vector<>();
        Vector<Float> cantidadMarzo = new Vector<>();
        Vector<Float> cantidadAbril = new Vector<>();
        Vector<Float> cantidadMayo = new Vector<>();
        Vector<Float> cantidadJunio = new Vector<>();
        Vector<Float> cantidadJulio = new Vector<>();
        Vector<Float> cantidadAgosto = new Vector<>();
        Vector<Float> cantidadSeptiembre = new Vector<>();
        Vector<Float> cantidadOctubre = new Vector<>();
        Vector<Float> cantidadNoviembre = new Vector<>();
        Vector<Float> cantidadDiciembre = new Vector<>();

        for (int i = 0; i < 4; i++) {

            cantidadEnero.add(Float.parseFloat(tablaPrevia.getValueAt(i, 0).toString()));
            cantidadFebrero.add(Float.parseFloat(tablaPrevia.getValueAt(i, 1).toString()));
            cantidadMarzo.add(Float.parseFloat(tablaPrevia.getValueAt(i, 2).toString()));
            cantidadAbril.add(Float.parseFloat(tablaPrevia.getValueAt(i, 3).toString()));
            cantidadMayo.add(Float.parseFloat(tablaPrevia.getValueAt(i, 4).toString()));
            cantidadJunio.add(Float.parseFloat(tablaPrevia.getValueAt(i, 5).toString()));
            cantidadJulio.add(Float.parseFloat(tablaPrevia.getValueAt(i, 6).toString()));
            cantidadAgosto.add(Float.parseFloat(tablaPrevia.getValueAt(i, 7).toString()));
            cantidadSeptiembre.add(Float.parseFloat(tablaPrevia.getValueAt(i, 8).toString()));
            cantidadOctubre.add(Float.parseFloat(tablaPrevia.getValueAt(i, 9).toString()));
            cantidadNoviembre.add(Float.parseFloat(tablaPrevia.getValueAt(i, 10).toString()));
            cantidadDiciembre.add(Float.parseFloat(tablaPrevia.getValueAt(i, 11).toString()));
        }
        
        Vector<Float> cantidadSimuladaEnero = mesEnero.getCantidadSimuladaPorMes(cantidadEnero);
        Vector<Float> cantidadSimuladaFebrero = mesFebrero.getCantidadSimuladaPorMes(cantidadFebrero);
        Vector<Float> cantidadSimuladaMarzo = mesMarzo.getCantidadSimuladaPorMes(cantidadMarzo);
        Vector<Float> cantidadSimuladaAbril = mesAbril.getCantidadSimuladaPorMes(cantidadAbril);
        Vector<Float> cantidadSimuladaMayo = mesMayo.getCantidadSimuladaPorMes(cantidadMayo);
        Vector<Float> cantidadSimuladaJunio = mesJunio.getCantidadSimuladaPorMes(cantidadJunio);
        Vector<Float> cantidadSimuladaJulio = mesJulio.getCantidadSimuladaPorMes(cantidadJulio);
        Vector<Float> cantidadSimuladaAgosto = mesAgosto.getCantidadSimuladaPorMes(cantidadAgosto);
        Vector<Float> cantidadSimuladaSeptiembre = mesSeptiembre.getCantidadSimuladaPorMes(cantidadSeptiembre);
        Vector<Float> cantidadSimuladaOctubre = mesOctubre.getCantidadSimuladaPorMes(cantidadOctubre);
        Vector<Float> cantidadSimuladaNoviembre = mesNoviembre.getCantidadSimuladaPorMes(cantidadNoviembre);
        Vector<Float> cantidadSimuladaDiciembre = mesDiciembre.getCantidadSimuladaPorMes(cantidadDiciembre);
        
        modeloTablaSimulacion.addColumn("Enero", cantidadSimuladaEnero);
        modeloTablaSimulacion.addColumn("Febrero", cantidadSimuladaFebrero);
        modeloTablaSimulacion.addColumn("Marzo", cantidadSimuladaMarzo);
        modeloTablaSimulacion.addColumn("Abril", cantidadSimuladaAbril);
        modeloTablaSimulacion.addColumn("Mayo", cantidadSimuladaMayo);
        modeloTablaSimulacion.addColumn("Junio", cantidadSimuladaJunio);
        modeloTablaSimulacion.addColumn("Julio", cantidadSimuladaJulio);
        modeloTablaSimulacion.addColumn("Agosto", cantidadSimuladaAgosto);
        modeloTablaSimulacion.addColumn("Septiembre", cantidadSimuladaSeptiembre);
        modeloTablaSimulacion.addColumn("Octubre", cantidadSimuladaOctubre);
        modeloTablaSimulacion.addColumn("Noviembre", cantidadSimuladaNoviembre);
        modeloTablaSimulacion.addColumn("Diciembre", cantidadSimuladaDiciembre);
        
        
            mostrarASimular[0] = String.valueOf(cantidadSimuladaEnero.get(0));
            mostrarASimular[1] = String.valueOf(cantidadSimuladaFebrero.get(0));
            mostrarASimular[2] = String.valueOf(cantidadSimuladaMarzo.get(0));
            mostrarASimular[3] = String.valueOf(cantidadSimuladaAbril.get(0));
            mostrarASimular[4] = String.valueOf(cantidadSimuladaMayo.get(0));
            mostrarASimular[5] = String.valueOf(cantidadSimuladaJunio.get(0));
            mostrarASimular[6] = String.valueOf(cantidadSimuladaJulio.get(0));
            mostrarASimular[7] = String.valueOf(cantidadSimuladaAgosto.get(0));
            mostrarASimular[8] = String.valueOf(cantidadSimuladaSeptiembre.get(0));
            mostrarASimular[9] = String.valueOf(cantidadSimuladaOctubre.get(0));
            mostrarASimular[10] = String.valueOf(cantidadSimuladaNoviembre.get(0));
            mostrarASimular[11] = String.valueOf(cantidadSimuladaDiciembre.get(0));
            
            mostrarBSimular[0] = String.valueOf(cantidadSimuladaEnero.get(1));
            mostrarBSimular[1] = String.valueOf(cantidadSimuladaFebrero.get(1));
            mostrarBSimular[2] = String.valueOf(cantidadSimuladaMarzo.get(1));
            mostrarBSimular[3] = String.valueOf(cantidadSimuladaAbril.get(1));
            mostrarBSimular[4] = String.valueOf(cantidadSimuladaMayo.get(1));
            mostrarBSimular[5] = String.valueOf(cantidadSimuladaJunio.get(1));
            mostrarBSimular[6] = String.valueOf(cantidadSimuladaJulio.get(1));
            mostrarBSimular[7] = String.valueOf(cantidadSimuladaAgosto.get(1));
            mostrarBSimular[8] = String.valueOf(cantidadSimuladaSeptiembre.get(1));
            mostrarBSimular[9] = String.valueOf(cantidadSimuladaOctubre.get(1));
            mostrarBSimular[10] = String.valueOf(cantidadSimuladaNoviembre.get(1));
            mostrarBSimular[11] = String.valueOf(cantidadSimuladaDiciembre.get(1));
            
            mostrarCSimular[0] = String.valueOf(cantidadSimuladaEnero.get(2));
            mostrarCSimular[1] = String.valueOf(cantidadSimuladaFebrero.get(2));
            mostrarCSimular[2] = String.valueOf(cantidadSimuladaMarzo.get(2));
            mostrarCSimular[3] = String.valueOf(cantidadSimuladaAbril.get(2));
            mostrarCSimular[4] = String.valueOf(cantidadSimuladaMayo.get(2));
            mostrarCSimular[5] = String.valueOf(cantidadSimuladaJunio.get(2));
            mostrarCSimular[6] = String.valueOf(cantidadSimuladaJulio.get(2));
            mostrarCSimular[7] = String.valueOf(cantidadSimuladaAgosto.get(2));
            mostrarCSimular[8] = String.valueOf(cantidadSimuladaSeptiembre.get(2));
            mostrarCSimular[9] = String.valueOf(cantidadSimuladaOctubre.get(2));
            mostrarCSimular[10] = String.valueOf(cantidadSimuladaNoviembre.get(2));
            mostrarCSimular[11] = String.valueOf(cantidadSimuladaDiciembre.get(2));
            
            mostrarDSimular[0] = String.valueOf(cantidadSimuladaEnero.get(3));
            mostrarDSimular[1] = String.valueOf(cantidadSimuladaFebrero.get(3));
            mostrarDSimular[2] = String.valueOf(cantidadSimuladaMarzo.get(3));
            mostrarDSimular[3] = String.valueOf(cantidadSimuladaAbril.get(3));
            mostrarDSimular[4] = String.valueOf(cantidadSimuladaMayo.get(3));
            mostrarDSimular[5] = String.valueOf(cantidadSimuladaJunio.get(3));
            mostrarDSimular[6] = String.valueOf(cantidadSimuladaJulio.get(3));
            mostrarDSimular[7] = String.valueOf(cantidadSimuladaAgosto.get(3));
            mostrarDSimular[8] = String.valueOf(cantidadSimuladaSeptiembre.get(3));
            mostrarDSimular[9] = String.valueOf(cantidadSimuladaOctubre.get(3));
            mostrarDSimular[10] = String.valueOf(cantidadSimuladaNoviembre.get(3));
            mostrarDSimular[11] = String.valueOf(cantidadSimuladaDiciembre.get(3));
        

        botonMRPSimulado.setEnabled(true);

    }//GEN-LAST:event_botonSimularActionPerformed

    private void botonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarActionPerformed

        for (int i = 0; i < tablaPrevia.getRowCount(); i++) {
            modeloTablaPrevia.removeRow(i);
            i -= 1;
        }
        modeloTablaSimulacion = new DefaultTableModel(0, 0);
        tablaSimulacion.setModel(modeloTablaSimulacion);
        for (int i = 0; i < tablaSimulacion.getRowCount(); i++) {
            modeloTablaSimulacion.removeRow(i);
            i -= 1;
        }

        botonCargarTabla.setEnabled(true);
        botonSimular.setEnabled(false);
        botonLimpiar.setEnabled(false);
        botonMRPHistorico.setEnabled(false);
        botonMRPSimulado.setEnabled(false);

    }//GEN-LAST:event_botonLimpiarActionPerformed

    private void sliderPublicidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderPublicidadStateChanged

        labelValorPublicidad.setText(String.valueOf(sliderPublicidad.getValue()));

    }//GEN-LAST:event_sliderPublicidadStateChanged

    private void sliderClimaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderClimaStateChanged

        labelValorClima.setText(String.valueOf(sliderClima.getValue()));
    }//GEN-LAST:event_sliderClimaStateChanged

    private void sliderCompetenciaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderCompetenciaStateChanged

        labelValorCompetencia.setText(String.valueOf(sliderCompetencia.getValue()));
    }//GEN-LAST:event_sliderCompetenciaStateChanged

    private void botonAgregarValoresMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarValoresMesActionPerformed

       

        String seleccionMes = comboMesesSimulacion.getSelectedItem().toString();
        int campañas = sliderPublicidad.getValue();
        int clima = sliderClima.getValue();
        int competencia = sliderCompetencia.getValue();

        if (seleccionMes.equals("Enero")) {
            mesEnero = new SimulacionMes(campañas, clima, competencia);
            System.out.println(mesEnero.toString());
            contador = contador + 1;
        } else {
            if (seleccionMes.equals("Febrero")) {
                mesFebrero = new SimulacionMes(campañas, clima, competencia);
                System.out.println(mesFebrero.toString());
                contador = contador + 1;
            } else {
                if (seleccionMes.equals("Marzo")) {
                    mesMarzo = new SimulacionMes(campañas, clima, competencia);
                    System.out.println(mesMarzo.toString());
                    contador = contador + 1;
                } else {

                    if (seleccionMes.equals("Abril")) {
                        mesAbril = new SimulacionMes(campañas, clima, competencia);
                        System.out.println(mesAbril.toString());
                        contador = contador + 1;
                    } else {

                        if (seleccionMes.equals("Mayo")) {
                            mesMayo = new SimulacionMes(campañas, clima, competencia);
                            System.out.println(mesMayo.toString());
                            contador = contador + 1;
                        } else {

                            if (seleccionMes.equals("Junio")) {
                                mesJunio = new SimulacionMes(campañas, clima, competencia);
                                System.out.println(mesJunio.toString());
                                contador = contador + 1;
                            } else {

                                if (seleccionMes.equals("Julio")) {
                                    mesJulio = new SimulacionMes(campañas, clima, competencia);
                                    System.out.println(mesJulio.toString());
                                    contador = contador + 1;
                                } else {

                                    if (seleccionMes.equals("Agosto")) {
                                        mesAgosto = new SimulacionMes(campañas, clima, competencia);
                                        System.out.println(mesAgosto.toString());
                                        contador = contador + 1;
                                    } else {

                                        if (seleccionMes.equals("Septiembre")) {
                                            mesSeptiembre = new SimulacionMes(campañas, clima, competencia);
                                            System.out.println(mesSeptiembre.toString());
                                            contador = contador + 1;
                                        } else {

                                            if (seleccionMes.equals("Octubre")) {
                                                mesOctubre = new SimulacionMes(campañas, clima, competencia);
                                                System.out.println(mesOctubre.toString());
                                                contador = contador + 1;
                                            } else {

                                                if (seleccionMes.equals("Noviembre")) {
                                                    mesNoviembre = new SimulacionMes(campañas, clima, competencia);
                                                    System.out.println(mesNoviembre.toString());
                                                    contador = contador + 1;
                                                } else {

                                                    if (seleccionMes.equals("Diciembre")) {
                                                        mesDiciembre = new SimulacionMes(campañas, clima, competencia);
                                                        System.out.println(mesDiciembre.toString());
                                                        contador = contador + 1;
                                                    }

                                                }

                                            }

                                        }

                                    }

                                }

                            }

                        }

                    }

                }

            }
        }

        labelContador.setText(String.valueOf(contador));
       // botonSimular.setEnabled(true);
        if (contador == 12 && mesEnero != null && mesFebrero != null && mesMarzo != null && mesAbril != null
                && mesMayo != null && mesJunio != null && mesJulio != null && mesAgosto != null && mesSeptiembre != null
                && mesOctubre != null && mesNoviembre != null && mesDiciembre != null) {
            botonSimular.setEnabled(true);
        }


    }//GEN-LAST:event_botonAgregarValoresMesActionPerformed

    private void comboMesesSimulacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMesesSimulacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboMesesSimulacionActionPerformed

    private void botonMRPHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMRPHistoricoActionPerformed
        
        VentanaMRPHistorico ventana = 
                new VentanaMRPHistorico(mostrarA, mostrarB, mostrarC, mostrarD);
        ventana.setVisible(true);
        ventana.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        
    }//GEN-LAST:event_botonMRPHistoricoActionPerformed

    private void botonMRPSimuladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMRPSimuladoActionPerformed
        VentanaMRPSimulado ventana = 
                new VentanaMRPSimulado(mostrarASimular, mostrarBSimular, mostrarCSimular, mostrarDSimular);
        ventana.setVisible(true);
        ventana.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }//GEN-LAST:event_botonMRPSimuladoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Ventana().setVisible(true);
        });
    }

    public String[] getMostrarA() {
        return mostrarA;
    }

    public String[] getMostrarB() {
        return mostrarB;
    }

    public String[] getMostrarC() {
        return mostrarC;
    }

    public String[] getMostrarD() {
        return mostrarD;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarValoresMes;
    private javax.swing.JButton botonCargarTabla;
    private javax.swing.JButton botonCrear;
    private javax.swing.JButton botonLimpiar;
    private javax.swing.JButton botonMRPHistorico;
    private javax.swing.JButton botonMRPSimulado;
    private javax.swing.JButton botonSimular;
    private javax.swing.JTextField campoCantidad;
    private javax.swing.JComboBox<String> comboMeses;
    private javax.swing.JComboBox<String> comboMesesSimulacion;
    private javax.swing.JComboBox<String> comboProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelContador;
    private javax.swing.JLabel labelValorClima;
    private javax.swing.JLabel labelValorCompetencia;
    private javax.swing.JLabel labelValorPublicidad;
    private javax.swing.JSlider sliderClima;
    private javax.swing.JSlider sliderCompetencia;
    private javax.swing.JSlider sliderPublicidad;
    private javax.swing.JTable tablaPrevia;
    private javax.swing.JTable tablaSimulacion;
    // End of variables declaration//GEN-END:variables
}
